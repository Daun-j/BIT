[ Test-2020-06-15 ]

1. 아래를  출력하시오.	(7분) ★암기★ //P.592
- (반복자 기반)
- (for-each문 기반)
HashMap<Integer, String> map = new HashMap<>();
   map.put(45, "Brown");
   map.put(37, "James");
   map.put(23, "Martin");

==console==
37	23	45	
James	Martin	Brown	
James	Martin	Brown	

2. 아래의 List 객체에서 순차적 접근방법 3가지로 출력하시오. (5분) ★암기★ 
-list가 가지는 get
-enhenced for
-iterator 객체

   List<String> list = new LinkedList<>();   
   
   // 컬렉션 인스턴스에 문자열 인스턴스 저장
   list.add("Toy");
   list.add("Box");
   list.add("Robot");

==console==
Toy	Box	Robot	
Toy	Box	Robot	
Toy	Box	Robot	


3. 아래가 호출되도록 BoxFactory 클래스를 만드시오. (5분)
Box<String> sBox = BoxFactory.<String>makeBox("Sweet");
Box<Double> dBox = BoxFactory.<Double>makeBox(7.59);

System.out.println(sBox.get());
System.out.println(dBox.get());

==console==
Sweet
7.59


4. 아래를 인스턴스 수가 2가 나오도록 수정하시오.     (5분+2분)
        HashSet<Num> set = new HashSet<>();
        
        set.add(new Num(7799));
        set.add(new Num(9955));
        set.add(new Num(7799));

        System.out.println("인스턴스 수: " + set.size());

==console==
인스턴스 수: 2

5.  아래를 기반으로 스택을 구현하시오. (15분)

interface IStack{
    boolean isEmpty();
    boolean isFull();
    void push(int item);
    int pop();
    int peek();
    void clear();
}

public class StackArray implements IStack{
    
    private int top;
    private int stackSize;
    private int stackArr[];
............
.........
}